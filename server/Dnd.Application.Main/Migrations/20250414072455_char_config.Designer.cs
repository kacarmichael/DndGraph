// <auto-generated />
using Dnd.Application.Main.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dnd.Application.Main.Migrations
{
    [DbContext(typeof(DndDbContext))]
    [Migration("20250414072455_char_config")]
    partial class char_config
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("integer");

                    b.Property<int>("Constitution")
                        .HasColumnType("integer");

                    b.Property<int>("Dexterity")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("Wisdom")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Characters", null, t =>
                        {
                            t.Property("Level")
                                .HasColumnName("Character_Level");
                        });
                });

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.Character", b =>
                {
                    b.OwnsOne("Dnd.Application.Main.Models.Characters.CharacterStats", "Stats", b1 =>
                        {
                            b1.Property<int>("CharacterId")
                                .HasColumnType("integer");

                            b1.Property<int>("CharismaScore")
                                .HasColumnType("int")
                                .HasColumnName("CharismaScore");

                            b1.Property<int>("ConstitutionScore")
                                .HasColumnType("int")
                                .HasColumnName("ConstitutionScore");

                            b1.Property<int>("DexterityScore")
                                .HasColumnType("int")
                                .HasColumnName("DexterityScore");

                            b1.Property<int>("IntelligenceScore")
                                .HasColumnType("int")
                                .HasColumnName("IntelligenceScore");

                            b1.Property<int>("Level")
                                .HasColumnType("integer")
                                .HasColumnName("Level");

                            b1.Property<int>("ProficiencyBonus")
                                .HasColumnType("integer");

                            b1.Property<int>("StrengthScore")
                                .HasColumnType("int")
                                .HasColumnName("StrengthScore");

                            b1.Property<int>("WisdomScore")
                                .HasColumnType("int")
                                .HasColumnName("WisdomScore");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.Navigation("Stats")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
