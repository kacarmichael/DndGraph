// <auto-generated />
using Dnd.Application.Main.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dnd.Application.Main.Migrations
{
    [DbContext(typeof(DndDbContext))]
    [Migration("20250415043901_add_CharacterClass")]
    partial class add_CharacterClass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<int>("CharacterStatsId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Characters", (string)null);
                });

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.CharacterStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("CharismaScore")
                        .HasColumnType("integer");

                    b.Property<int>("ConstitutionScore")
                        .HasColumnType("integer");

                    b.Property<int>("DexterityScore")
                        .HasColumnType("integer");

                    b.Property<int>("IntelligenceScore")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("ProficiencyBonus")
                        .HasColumnType("integer");

                    b.Property<int>("StrengthScore")
                        .HasColumnType("integer");

                    b.Property<int>("WisdomScore")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CharacterStats", (string)null);
                });

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClassId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpellcastingAbility")
                        .HasColumnType("text");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            Name = "Barbarian",
                            SpellcastingAbility = "Strength"
                        },
                        new
                        {
                            ClassId = 2,
                            Name = "Bard",
                            SpellcastingAbility = "Charisma"
                        },
                        new
                        {
                            ClassId = 3,
                            Name = "Cleric",
                            SpellcastingAbility = "Wisdom"
                        },
                        new
                        {
                            ClassId = 4,
                            Name = "Druid",
                            SpellcastingAbility = "Wisdom"
                        },
                        new
                        {
                            ClassId = 5,
                            Name = "Fighter",
                            SpellcastingAbility = "Strength"
                        },
                        new
                        {
                            ClassId = 6,
                            Name = "Monk",
                            SpellcastingAbility = "Dexterity"
                        },
                        new
                        {
                            ClassId = 7,
                            Name = "Paladin",
                            SpellcastingAbility = "Charisma"
                        },
                        new
                        {
                            ClassId = 8,
                            Name = "Ranger",
                            SpellcastingAbility = "Dexterity"
                        },
                        new
                        {
                            ClassId = 9,
                            Name = "Rogue",
                            SpellcastingAbility = "Dexterity"
                        },
                        new
                        {
                            ClassId = 10,
                            Name = "Sorcerer",
                            SpellcastingAbility = "Charisma"
                        },
                        new
                        {
                            ClassId = 11,
                            Name = "Warlock",
                            SpellcastingAbility = "Charisma"
                        },
                        new
                        {
                            ClassId = 12,
                            Name = "Wizard",
                            SpellcastingAbility = "Intelligence"
                        },
                        new
                        {
                            ClassId = 13,
                            Name = "Artificer",
                            SpellcastingAbility = "Intelligence"
                        });
                });

            modelBuilder.Entity("Dnd.Application.Main.Models.Intermediate.CharacterClass", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("ClassId")
                        .HasColumnType("integer");

                    b.Property<int>("Levels")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "ClassId");

                    b.ToTable("CharacterClass", (string)null);
                });

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.Character", b =>
                {
                    b.HasOne("Dnd.Application.Main.Models.Characters.CharacterStats", "Stats")
                        .WithOne("Character")
                        .HasForeignKey("Dnd.Application.Main.Models.Characters.Character", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("Dnd.Application.Main.Models.Intermediate.CharacterClass", b =>
                {
                    b.HasOne("Dnd.Application.Main.Models.Characters.Character", "_character")
                        .WithMany("Classes")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_character");
                });

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.Character", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.CharacterStats", b =>
                {
                    b.Navigation("Character")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
