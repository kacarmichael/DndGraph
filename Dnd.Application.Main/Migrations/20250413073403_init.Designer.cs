// <auto-generated />
using Dnd.Application.Main.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dnd.Application.Main.Migrations
{
    [DbContext(typeof(CharacterDbContext))]
    [Migration("20250413073403_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dnd.Application.Main.Models.Characters.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("integer")
                        .HasColumnName("CharismaScore");

                    b.Property<int>("Constitution")
                        .HasColumnType("integer")
                        .HasColumnName("ConstitutionScore");

                    b.Property<int>("Dexterity")
                        .HasColumnType("integer")
                        .HasColumnName("DexterityScore");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer")
                        .HasColumnName("IntelligenceScore");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Strength")
                        .HasColumnType("integer")
                        .HasColumnName("StrengthScore");

                    b.Property<int>("Wisdom")
                        .HasColumnType("integer")
                        .HasColumnName("WisdomScore");

                    b.HasKey("Id");

                    b.ToTable("Characters", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AC = 10,
                            Charisma = 10,
                            Constitution = 10,
                            Dexterity = 10,
                            Intelligence = 10,
                            Level = 1,
                            Name = "Test Character",
                            Strength = 10,
                            Wisdom = 10
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
